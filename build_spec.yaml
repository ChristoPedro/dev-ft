version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  # these are local variables to the build config
  variables:
    compartment: "ocid1.compartment.oc1..aaaaaaaar2qfdgn75zgiauplengzyg4tywbrfgsfrt3rlctq4c4dckw7proq"

  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
    #EXAMPLE_SECRET: "YOUR-SECRET-OCID"

  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this Build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
    - BUILDRUN_HASH

steps:
  - type: Command
    timeoutInSeconds: 1200
    name: "Build Function into container image"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/dev-ft-0.1/Functions/producer
      fn build --verbose
      image=$(docker images | grep producer | awk '{print $3}')
      if [ -n "$image" ]; then
        docker tag $image java-img
      else
        echo "Erro: não foi possível encontrar a imagem do producer"
        exit 1
      fi
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root

outputArtifacts:
  - name: output_fn_network
    type: DOCKER_IMAGE
    # this is only the locally exported container image name
    # this location tag doesn't effect the tag used to deliver the container image
    # to the Container Registry.
    location: java-img:latest